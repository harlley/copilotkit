[project]
name = "server"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "ag-ui-langgraph>=0.0.17",
    "copilotkit>=0.1.69",
    "fastapi>=0.115.14",
    "langchain>=0.3,<1.0",
    "langchain-openai>=0.2,<1.0",
    "langgraph>=1.0.0",
    "pydantic>=2.12.3",
    "python-dotenv>=1.1.1",
    "typing-extensions>=4.15.0",
    "uvicorn>=0.37.0",
]

[dependency-groups]
dev = [
    "ruff>=0.8.0",
    "pyright>=1.1.390",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "RUF",    # ruff-specific rules
]
ignore = [
    "E501",   # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["server"]

[tool.pyright]
include = ["*.py"]
exclude = [
    "**/__pycache__",
    ".venv",
]
pythonVersion = "3.11"
typeCheckingMode = "basic"

# Report missing imports and stubs as warnings (libraries without type stubs)
reportMissingImports = true
reportMissingTypeStubs = "warning"

# Report unknown/partial types as warnings (common with untyped libraries)
reportUnknownParameterType = "warning"
reportUnknownArgumentType = "warning"
reportUnknownMemberType = "warning"
reportUnknownVariableType = "warning"

# Keep these as errors (actual code issues)
reportGeneralTypeIssues = "error"
reportOptionalMemberAccess = "error"
reportOptionalSubscript = "error"
reportOptionalCall = "error"

# Other settings
reportUntypedFunctionDecorator = false
reportUntypedClassDecorator = false
reportPrivateUsage = false
reportConstantRedefinition = false
